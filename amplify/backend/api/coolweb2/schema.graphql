type UserStores
  @model(timestamps: null)
  @auth(
    rules: [
      { allow: public, operations: [read], provider: iam }
      { allow: private, operations: [create], provider: iam }
      {
        allow: private
        operations: [create, update, delete, read]
        provider: userPools
      }
    ]
  ) {
  user_id: String! @primaryKey(sortKeyFields: ["timestamp"])
  timestamp: AWSDateTime!
  store_name: String!
    @index(name: "UserStoreProducts", queryField: "getUserStoreProducts")
  store_url: String!
  products: [Product!]!
}

type ProductBlogs
  @model(timestamps: null)
  @auth(
    rules: [
      { allow: public, operations: [read], provider: iam }
      { allow: private, operations: [create], provider: iam }
      {
        allow: private
        operations: [create, update, delete, read]
        provider: userPools
      }
    ]
  ) {
  content: String!
  user_id: String!
    @index(
      name: "UserProductsBlogs"
      queryField: "getUserProductsBlogs"
      sortKeyFields: ["created_at"]
    )
  metadata: String
  store_name: String!
  store_url: String!
  products: [Product!]!
  created_at: AWSDateTime!
}

type Product {
  product_id: String!
  title: String!
  handle: String!
  body_html: String
  images: [ProductImage!]!
}

type ProductImage {
  id: String!
  width: Int
  height: Int
  src: String!
}
